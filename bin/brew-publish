#!/bin/bash
# Usage: script/brew-publish <name> <version> [-g <gh-project>] [-t <homebrew-tap>] [-r <homebrew-remote>]
#
# Updates the `<name>.rb` Homebrew formula to `<version>` and sends a pull
# request with the change.
set -e

abort() {
  echo "$1" >&2
  exit 1
}

brew_name="${1?Formula name is required.}"
version="${2?Formula version is required.}"
shift 2

while getopts ":g:rt:" opt; do
  case $opt in
  g) gh_project="github.com/${OPTARG}" ;;
  r) brew_remote="${OPTARG:-origin}" ;;
  t) brew_dir="Taps/${OPTARG}" ;;
  :) abort "Option -$OPTARG requires an argument." ;;
  \?) abort "Invalid option: -$OPTARG" ;;
  esac
done

if ! type -p hub >/dev/null; then
  abort "ERROR: You have to install hub to proceed."
fi

if [ -z "$gh_project" ]; then
  gh_project="$(git remote -v | grep '^origin' | grep -oE 'github.com[:/][^/]+/[^/ ]+' | head -1)"
  gh_project="${gh_project%.git}"
fi

url="https://${gh_project/://}/archive/${version}.tar.gz"

checksum="$(curl -fsSL "$url" | shasum -a 256 -b | awk '{print $1}')"

if [ -z "$checksum" ]; then
  abort "ERROR: calculating the checksum failed for $url"
fi

pushd "$(brew --prefix)/Library/${brew_dir:-Formula}"

git fetch -q --unshallow origin master 2>/dev/null || git fetch -q origin master

branch="${brew_name}-${version}"
git checkout -q -B "$branch" origin/master

formula="${brew_name}.rb"
sed -i.bak -E "
  s!^(  url ).+!\\1\"${url}\"!
  s!^(  sha256 ).+!\\1\"${checksum}\"!
" "$formula"
rm -f "${formula}.bak"

git commit -m "${brew_name} ${version#v}" -- "$formula"

if [ -z "$brew_remote" ]; then
  # hackish way of getting the git remote name for user's fork
  brew_remote="$(hub fork 2>&1 | grep -oE 'remote:? \S+' | tail -1 | awk '{print $2}')"
fi
git push -u "$brew_remote" HEAD
hub pull-request -m "${brew_name} ${version#v}"

git checkout -q -
